[build-system]
requires = [
    "setuptools>=46.4.0",       # PEP-420 support, PEP-517/518 support
    "wheel>=0.30.0",            # limited python api support
    "cython~=3.0",
    "numpy~=2.0",
]
build-backend = "setuptools.build_meta"

[project]
name = "dwave-gate"
dynamic = ["version"]
authors = [
    {name = "D-Wave Inc.", email = "tools@dwavesys.com"},
]
description = "Gate model library."
license = {file = "LICENSE"}
classifiers = [
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
]
requires-python = ">= 3.9"
dependencies = [
    "numpy>=1.24.4",
]
[project.optional-dependencies]
qir = [
    "pyqir>=0.8.0,<0.10",
]

[project.readme]
file = "README.rst"
content-type = "text/x-rst"

[project.urls]
Homepage = "https://github.com/dwavesystems/dwave-gate"
Download = "https://github.com/dwavesystems/dwave-gate/releases"

[tool.cibuildwheel]
build-verbosity = "1"
skip = "pp* *musllinux*"
before-test = "pip install pyqir==0.9.0 && pip install -r {project}/requirements_dev.txt"
test-command = "pytest {project}/tests"
before-build = "pip install cgen==2020.1 && python {project}/dwave/gate/simulator/operation_generation.py"

[tool.cibuildwheel.linux]
archs = "x86_64 aarch64"
manylinux-x86_64-image = "manylinux2014"
manylinux-aarch64-image = "manylinux2014"

[tool.cibuildwheel.macos]
# We follow NumPy and don't build universal wheels, see https://github.com/numpy/numpy/pull/20787
archs = "x86_64 arm64"

[tool.cibuildwheel.windows]
archs = "AMD64"
# before-build = "pip install delvewheel"
# repair-wheel-command = "delvewheel repair -w {dest_dir} {wheel}"

[[tool.cibuildwheel.overrides]]
select = "*aarch64*"
before-test = "pip install -r {project}/requirements_dev.txt"

[tool.pyright]
reportUnusedExpression = false

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests",
]

[tool.setuptools.packages.find]
include = ["dwave.*"]

[tool.setuptools.dynamic]
version = {attr = "dwave.gate.__version__"}
