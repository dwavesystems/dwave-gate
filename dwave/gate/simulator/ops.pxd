# THIS FILE WAS AUTOMATICALLY GENERATED BY dwave/gate/simulator/operation_generation.py
cimport numpy as np
from libc.stdint cimport uint64_t


cdef extern from "./ops.h" nogil:
    void c_single_qubit "single_qubit" (int num_qubits, np.complex128_t* state_vector, np.complex128_t* gate_matrix, int target0)
    void c_apply_gate_control "apply_gate_control" (int num_qubits, np.complex128_t* state_vector, np.complex128_t* gate_matrix, int target0, int control0)
    void c_apply_gate_two_control "apply_gate_two_control" (int num_qubits, np.complex128_t* state_vector, np.complex128_t* gate_matrix, int target0, int control0, int control1)
    void c_apply_swap "apply_swap" (int num_qubits, np.complex128_t* state_vector, np.complex128_t* gate_matrix, int target0, int target1)
    void c_apply_cswap "apply_cswap" (int num_qubits, np.complex128_t* state_vector, np.complex128_t* gate_matrix, int target0, int target1, int control0)
    void c_apply_dephase_0 "apply_dephase_0" (int num_qubits, np.complex128_t* state_vector, np.complex128_t* gate_matrix, int target0)
    void c_apply_dephase_1 "apply_dephase_1" (int num_qubits, np.complex128_t* state_vector, np.complex128_t* gate_matrix, int target0)
    void c_apply_amp_damp_0 "apply_amp_damp_0" (int num_qubits, np.complex128_t* state_vector, np.complex128_t* gate_matrix, int target0)
    void c_apply_amp_damp_1 "apply_amp_damp_1" (int num_qubits, np.complex128_t* state_vector, np.complex128_t* gate_matrix, int target0)


cdef inline single_qubit(int num_qubits, complex[::1] state_vector, complex[:,:] gate_matrix, int target0):
    c_single_qubit(num_qubits, <np.complex128_t*>&state_vector[0], <np.complex128_t*>&gate_matrix[0, 0], target0)


cdef inline apply_gate_control(int num_qubits, complex[::1] state_vector, complex[:,:] gate_matrix, int target0, int control0):
    c_apply_gate_control(num_qubits, <np.complex128_t*>&state_vector[0], <np.complex128_t*>&gate_matrix[0, 0], target0, control0)


cdef inline apply_gate_two_control(int num_qubits, complex[::1] state_vector, complex[:,:] gate_matrix, int target0, int control0, int control1):
    c_apply_gate_two_control(num_qubits, <np.complex128_t*>&state_vector[0], <np.complex128_t*>&gate_matrix[0, 0], target0, control0, control1)


cdef inline apply_swap(int num_qubits, complex[::1] state_vector, complex[:,:] gate_matrix, int target0, int target1):
    c_apply_swap(num_qubits, <np.complex128_t*>&state_vector[0], <np.complex128_t*>&gate_matrix[0, 0], target0, target1)


cdef inline apply_cswap(int num_qubits, complex[::1] state_vector, complex[:,:] gate_matrix, int target0, int target1, int control0):
    c_apply_cswap(num_qubits, <np.complex128_t*>&state_vector[0], <np.complex128_t*>&gate_matrix[0, 0], target0, target1, control0)


cdef inline apply_dephase_0(int num_qubits, complex[::1] state_vector, complex[:,:] gate_matrix, int target0):
    c_apply_dephase_0(num_qubits, <np.complex128_t*>&state_vector[0], <np.complex128_t*>&gate_matrix[0, 0], target0)


cdef inline apply_dephase_1(int num_qubits, complex[::1] state_vector, complex[:,:] gate_matrix, int target0):
    c_apply_dephase_1(num_qubits, <np.complex128_t*>&state_vector[0], <np.complex128_t*>&gate_matrix[0, 0], target0)


cdef inline apply_amp_damp_0(int num_qubits, complex[::1] state_vector, complex[:,:] gate_matrix, int target0):
    c_apply_amp_damp_0(num_qubits, <np.complex128_t*>&state_vector[0], <np.complex128_t*>&gate_matrix[0, 0], target0)


cdef inline apply_amp_damp_1(int num_qubits, complex[::1] state_vector, complex[:,:] gate_matrix, int target0):
    c_apply_amp_damp_1(num_qubits, <np.complex128_t*>&state_vector[0], <np.complex128_t*>&gate_matrix[0, 0], target0)

